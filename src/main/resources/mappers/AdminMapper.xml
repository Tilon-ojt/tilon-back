<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tilon.ojt_back.dao.user.AdminMapper">

    <!-- 1. 어드민 전체 목록 조회 -->
    <select id="getAdminList" resultType="com.tilon.ojt_back.domain.user.AdminResponseDTO">
        SELECT 
            admin_id AS adminId, 
            emp_name AS empName, 
            password, 
            role, 
            created_at AS createdAt, 
            updated_at AS updatedAt, 
            nickname
        FROM 
            admin

          WHERE 
            role != 'ROLE_SUPER_ADMIN'
    </select>

    <!-- 2. empName로 사용자 정보를 조회하는 쿼리 -->
    <select id="getUserByEmpName" parameterType="string" resultType="com.tilon.ojt_back.domain.user.AdminResponseDTO">
        SELECT 
            admin_id AS adminId, 
            emp_name As empName, 
            password, 
            role, 
            created_at AS createdAt, 
            updated_at AS updatedAt, 
            nickname
        FROM 
            admin
        WHERE 
            emp_name = #{empName}
    </select>

    <!-- 3. 사용자 추가 -->
    <insert id="insertAdmin" parameterType="com.tilon.ojt_back.domain.user.AdminRequestDTO">
        INSERT INTO admin (emp_name, password, nickname)
        VALUES (#{empName}, #{password}, #{nickname})
    </insert>

    <!-- 사용자 추가 후 존재 여부 검증 -->
    <select id="existsByEmpName" parameterType="string" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM admin
        WHERE emp_name = #{empName}
    </select>

    <!-- 4. 비밀번호 초기화 쿼리 -->
    <update id="resetPassword" parameterType="map">
        UPDATE admin
        SET password = #{password}
        WHERE admin_id = #{adminId}
    </update>

        <!-- 4. 비밀번호 일괄 초기화 쿼리 -->
    <update id="resetPasswords" parameterType="map">
        UPDATE admin
        SET password = #{password}
        WHERE admin_id IN
        <foreach item="adminId" collection="adminIds" open="(" separator="," close=")">
            #{adminId}
        </foreach>
    </update>

    

    <!-- 5. 비밀번호 동일성 체크 아이디로 비밀번호 조회-->
    <select id="getCurrentPassword" parameterType="int" resultType="string">
      SELECT password FROM admin WHERE admin_id = #{adminId}
    </select>

    <!-- 6. 계정 정보 변경-->
    <update id="updateAdminInfo" parameterType="com.tilon.ojt_back.domain.user.AdminUpdateDTO">
     UPDATE admin SET password=#{password}, nickname=#{nickname} WHERE admin_id=#{adminId}
    </update>

     <!-- 7. 여러 adminId를 한 번에 삭제하는 쿼리 -->
    <delete id="deleteByAdminIds" parameterType="list">
        DELETE FROM Admin
        WHERE admin_id IN
        <foreach item="id" collection="adminIds" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

       <!-- 8. 비밀번호 변경 쿼리 -->
    <update id="updatePassword" parameterType="com.tilon.ojt_back.domain.user.AdminUpdateDTO">
        UPDATE admin
        SET password = #{newPassword}
        WHERE admin_id = #{adminId} 
    </update>

</mapper>
