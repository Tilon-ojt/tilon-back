<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tilon.ojt_back.dao.homepage.UserMapper">
    <!-- user의 post 조회 --> 
    <select id="getPostsRow"
            parameterType="Map"
            resultType="com.tilon.ojt_back.domain.manage.PostResponseDTO">
        SELECT p.post_id as postId, p.title, p.content, p.category, p.admin_id as adminId, p.created_at as createdAt, p.updated_at as updatedAt, p.status, p.fix, p.link, pi.file_name as imageUrl
        FROM post p
        LEFT JOIN postimages pi ON p.post_id = pi.post_id
        WHERE p.category = #{category} AND p.status = 'PUBLISHED'
        ORDER BY p.created_at DESC
        LIMIT #{size} OFFSET #{offset};
    </select>

    <!-- user의 post 총 개수 조회 --> 
    <select id="getPostsCountRow"
            parameterType="com.tilon.ojt_back.domain.manage.PostCategory"
            resultType="int">
        SELECT COUNT(*)
        FROM post
        WHERE category = #{category} AND status = 'PUBLISHED';
    </select>

    <!-- user의 post 상세 조회 -->
    <select id="getPostRow"
            parameterType="int"
            resultType="com.tilon.ojt_back.domain.manage.PostResponseDTO">
        SELECT p.post_id as postId, p.title, p.content, p.category, p.admin_id as adminId, p.created_at as createdAt, p.updated_at as updatedAt, p.status, p.fix, p.link, pi.file_name as imageUrl
        FROM post p
        LEFT JOIN postimages pi ON p.post_id = pi.post_id
        WHERE p.post_id = #{postId} AND p.status = 'PUBLISHED';
    </select>

    <!-- user의 homepage 조회 --> 
    <select id="getHomepage"
            parameterType="com.tilon.ojt_back.domain.manage.PostCategory"
            resultType="com.tilon.ojt_back.domain.manage.PostResponseDTO">
        SELECT p.post_id as postId, p.title, p.content, p.category, p.admin_id as adminId, p.created_at as createdAt, p.updated_at as updatedAt, p.status, p.fix, p.link, pi.file_name as imageUrl
        FROM post p
        LEFT JOIN postimages pi ON p.post_id = pi.post_id
        WHERE p.category = #{category} AND p.status = 'PUBLISHED' AND p.fix = 'FIX'
        ORDER BY p.created_at DESC
        LIMIT 4;
    </select>
</mapper>